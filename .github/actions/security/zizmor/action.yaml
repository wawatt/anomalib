# Zizmor Scanner Action
#
# This composite action executes GitHub Actions workflows scanning using zizmor,
# providing configurable security analysis capabilities.
#
# Example Usage:
#jobs:
#  zizmor:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Run zizmor scan
#        uses: ./.github/actions/security/zizmor
#        with:
#          scan-scope: all
#          severity-level: MEDIUM
#          confidence-level: HIGH
#          fail-on-findings: true
#
# If necessary, put zizmor configuration into default location .github/zizmor.yml"
# zizmor will discover and us it

name: "Zizmor Security Scan"
description: "Runs Zizmor with configurable options"

inputs:
  scan-scope:
    description: "Scope of files to scan (all/changed)"
    required: false
    default: "changed"
  paths:
    description: "Paths to scan when using all scope"
    required: false
    default: "." # all scope by default
  severity-level:
    description: "Minimum severity level to report (LOW/MEDIUM/HIGH)"
    default: "LOW"
  confidence-level:
    description: "Minimum confidence level to report (LOW/MEDIUM/HIGH)"
    required: false
    default: "LOW"
  output-format:
    description: "Format for scan results (plain/json/sarif)"
    required: false
    default: "sarif" # by default to upload into Security tab
  fail-on-findings:
    description: "Whether to fail the action if issues are found"
    required: false
    default: "true"
  # There's no top-level YAML way to declare a variable scoped to a composite action and available in step options.
  zizmor-version:
    description: "Zizmor version"
    required: false
    # renovate: datasource=github-releases depName=zizmorcore/zizmor
    default: 1.11.0

outputs:
  scan_result:
    description: "Exit code of the Zizmor scan"
    value: ${{ steps.run-zizmor.outputs.exit_code }}
  report_path:
    description: "Path to the generated report file"
    value: ${{ steps.run-zizmor.outputs.report_path }}

runs:
  using: composite
  steps:
    - name: Install uv
      uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
      with:
        enable-cache: true
        activate-environment: true
        cache-suffix: ${{ inputs.zizmor-version }}
        cache-dependency-glob: ""

    - name: Get changed files
      if: inputs.scan-scope == 'changed'
      id: changed-files
      uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
      with:
        files: .github/**

    - name: Run Zizmor
      id: run-zizmor
      shell: bash
      env:
        INPUTS_SCAN_SCOPE: ${{ inputs.scan-scope }}
        INPUTS_PATHS: ${{ inputs.paths }}
        INPUTS_SEVERITY_LEVEL: ${{ inputs.severity-level }}
        INPUTS_CONFIDENCE_LEVEL: ${{ inputs.confidence-level }}
        INPUTS_OUTPUT_FORMAT: ${{ inputs.output-format }}
        INPUTS_FAIL_ON_FINDINGS: ${{ inputs.fail-on-findings }}
        ZIZMOR_VERSION: ${{ inputs.zizmor-version }}
        STEPS_CHANGED_FILES_OUTPUTS_ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}

      # For changed scope: if changes in .github/** are detected, we rescan all files because
      # providing individual non-workflow files (even yaml) to Zizmor causes errors ("invalid GitHub Actions workflow").
      # Based on the assumption that workflows are maintained in a valid state, this will not trigger alerts unrelated to the PR.

      run: |
        set +e
        REPORT_FILE="zizmor-report.$INPUTS_OUTPUT_FORMAT"

        # Convert severity and confidence to lowercase
        SEVERITY=$(echo "$INPUTS_SEVERITY_LEVEL" | tr '[:upper:]' '[:lower:]')
        CONFIDENCE=$(echo "$INPUTS_CONFIDENCE_LEVEL" | tr '[:upper:]' '[:lower:]')

        if [[ "$INPUTS_SCAN_SCOPE" == "changed" && -n "$STEPS_CHANGED_FILES_OUTPUTS_ALL_CHANGED_FILES" ]]; then
          echo "There are some changes detected in .github/, checking with Zizmor"
          uvx zizmor=="$ZIZMOR_VERSION" \
              --min-confidence ${CONFIDENCE} \
              --min-severity ${SEVERITY} \
              .
          exit_code="$?"
          echo "exit_code=$exit_code" >> $GITHUB_OUTPUT

        elif [[ "$INPUTS_SCAN_SCOPE" == "all" ]] ; then
          echo "Running Zizmor on all files in $INPUTS_PATHS"
          uvx zizmor=="$ZIZMOR_VERSION" \
              --min-confidence ${CONFIDENCE} \
              --min-severity ${SEVERITY} \
              --format "$INPUTS_OUTPUT_FORMAT" \
              "$INPUTS_PATHS" \
              > "$REPORT_FILE"

          exit_code="$?"
          echo "exit_code=$exit_code" >> $GITHUB_OUTPUT
          echo "report_path=${REPORT_FILE}" >> $GITHUB_OUTPUT
        else
          echo "No files to scan found"
        fi

        if [[ "$INPUTS_FAIL_ON_FINDINGS" == "true" && -n "$exit_code" && "$exit_code" != "0" ]]; then
          exit $exit_code
        fi

      # Upload results after full scope analysis
    - name: Upload reports
      if: hashFiles('zizmor-report.*') != '' # if any report is available
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: zizmor-results
        path: zizmor-report.*
        retention-days: 7
    - name: Upload sarif
      if: hashFiles('zizmor-report.sarif') != '' # if SARIF is available, upload it
      uses: github/codeql-action/upload-sarif@51f77329afa6477de8c49fc9c7046c15b9a4e79d # v3.29.5
      with:
        sarif_file: zizmor-report.sarif
